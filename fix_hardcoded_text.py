#!/usr/bin/env python3
"""
Script to fix hardcoded Hindi text in templates
This script will replace common hardcoded Hindi text patterns with proper Flask-Babel translation functions
"""

import os
import re
from pathlib import Path

# Define common hardcoded text patterns and their replacements
REPLACEMENTS = {
    # Farm related
    'рдЦреЗрдд рд╕рдВрдкрд╛рджрд┐рдд рдХрд░реЗрдВ': '{{ _("Edit Farm") }}',
    'рд╡рд╛рдкрд╕ рдЦреЗрдд рд╡рд┐рд╡рд░рдг рдореЗрдВ': '{{ _("Back to Farm Details") }}',
    'рдЦреЗрдд рдХрд╛ рдирд╛рдо': '{{ _("Farm Name") }}',
    'рдЬреИрд╕реЗ: рдореБрдЦреНрдп рдЦреЗрдд, рдкреВрд░реНрд╡реА рдЦреЗрдд, рдЖрджрд┐': '{{ _("e.g.: Main Farm, East Farm, etc") }}',
    'рдХреНрд╖реЗрддреНрд░рдлрд▓ рдмрджрд▓рдиреЗ рдХреЗ рд▓рд┐рдП рдирдпрд╛ рдЦреЗрдд рдмрдирд╛рдПрдВред (рдлрд╕рд▓реЛрдВ рдХреА рд╕реБрд░рдХреНрд╖рд╛ рдХреЗ рд▓рд┐рдП)': '{{ _("Create a new farm to change area. (For crop safety)") }}',
    'рдЦреЗрдд рдХрд╛ рд╕рд╛рдВрдЦреНрдпрд┐рдХреА': '{{ _("Farm Statistics") }}',
    'рдЦреЗрдд рдХреА рдЬрд╛рдирдХрд╛рд░реА': '{{ _("Farm Information") }}',
    'рдЦреЗрдд рд╕рдВрдкрд╛рджрд┐рдд рдХрд░реЗрдВ': '{{ _("Edit Farm") }}',
    'рдЦреЗрдд рд╣рдЯрд╛рдПрдВ': '{{ _("Delete Farm") }}',
    'рдЦреЗрдд рд╣рдЯрд╛рдиреЗ рд╕реЗ рд╕рднреА рдлрд╕рд▓реЛрдВ рдХреА рдЬрд╛рдирдХрд╛рд░реА рднреА рд╣рдЯ рдЬрд╛рдПрдЧреАред': '{{ _("Deleting farm will also remove all crop information.") }}',
    'рдЦреЗрдд рд╕реВрдЪреА рдореЗрдВ рд╡рд╛рдкрд╕': '{{ _("Back to Farm List") }}',
    'рдЗрд╕ рдЦреЗрдд рдореЗрдВ рдЕрдкрдиреА рдкрд╣рд▓реА рдлрд╕рд▓ рдЬреЛрдбрд╝реЗрдВ': '{{ _("Add your first crop to this farm") }}',
    
    # Location related
    'Google Maps рдЦреЛрд▓реЗрдВ рдФрд░ рдЕрдкрдиреЗ рдЦреЗрдд рдХрд╛ рд╕реНрдерд╛рди рдЦреЛрдЬреЗрдВ': '{{ _("Open Google Maps and find your farm location") }}',
    
    # Area and measurement
    'рдПрдХрдбрд╝ рдХреНрд╖реЗрддреНрд░рдлрд▓': '{{ _("acres area") }}',
    'рдЙрдкрдпреЛрдЧ рдореЗрдВ (рдПрдХрдбрд╝)': '{{ _("In Use (acres)") }}',
    'рдЙрдкрд▓рдмреНрдз (рдПрдХрдбрд╝)': '{{ _("Available (acres)") }}',
    'рдХреНрд╖реЗрддреНрд░рдлрд▓ (рдПрдХрдбрд╝ рдореЗрдВ)': '{{ _("Area (in acres)") }}',
    
    # Status and time
    'рджрд┐рди рдкреБрд░рд╛рдирд╛': '{{ _("days old") }}',
    'рджрд┐рди рдмрд╛рдХреА': '{{ _("days remaining") }}',
    
    # Forms and actions
    'рдирд╛рдо:': '{{ _("Name:") }}',
    'рдЪреЗрддрд╛рд╡рдиреА:': '{{ _("Warning:") }}',
    'рд╕рдХреНрд░рд┐рдп рдлрд╕рд▓реЛрдВ рдХреА рдЬрд╛рдирдХрд╛рд░реА рднреА рд╣рдЯ рдЬрд╛рдПрдЧреАред': '{{ _("active crops information will also be deleted.") }}',
    
    # Dates and updates
    'рдЕрдВрддрд┐рдо рдЕрдкрдбреЗрдЯ: рджрд┐рд╕рдВрдмрд░ 2024': '{{ _("Last Updated: December 2024") }}',
    'рд╕рдордп-рд╕рдордп рдкрд░ рдЕрдкрдбреЗрдЯ рдХрд░ рд╕рдХрддреЗ рд╣реИрдВ': '{{ _("may be updated from time to time") }}',
    'рдорд╣рддреНрд╡рдкреВрд░реНрдг рдмрджрд▓рд╛рд╡реЛрдВ': '{{ _("significant changes") }}',
    'рдирд┐рд░реНрдгрдп рд▓реЗрдиреЗ рд╕реЗ рдкрд╣рд▓реЗ рдЬрд╛рдирдХрд╛рд░реА рдХреА рдкреБрд╖реНрдЯрд┐ рдХрд░реЗрдВ': '{{ _("verify information before making important decisions") }}',
    
    # Services and descriptions
    'рд╕реЗрд╡рд╛ рдХреА рдЙрдкрд▓рдмреНрдзрддрд╛': '{{ _("Service Availability") }}',
    'рд╡реНрдпрдХреНрддрд┐рдЧрдд рдЬрд╛рдирдХрд╛рд░реА (рдирд╛рдо, рдИрдореЗрд▓, рдлреЛрди рдирдВрдмрд░)': '{{ _("Personal information (name, email, phone number)") }}',
    'рдЦреЗрдд рдФрд░ рдлрд╕рд▓ рдХреА рдЬрд╛рдирдХрд╛рд░реА': '{{ _("Farm and crop information") }}',
    'рдХреГрд╖рд┐ рд╕рд▓рд╛рд╣ рдФрд░ рд░рд┐рдкреЛрд░реНрдЯреНрд╕ рджреЗрдиреЗ рдХреЗ рд▓рд┐рдП': '{{ _("to provide agricultural advice and reports") }}',
    'рд╕реНрдорд╛рд░реНрдЯ рдлрд╕рд▓ рджреЗрдЦрднрд╛рд▓ рд╕рд╣рд╛рдпрдХ рдПрдХ рдХреГрд╖рд┐ рдкреНрд░рдмрдВрдзрди рдкреНрд▓реЗрдЯрдлреЙрд░реНрдо рд╣реИ рдЬреЛ рдХрд┐рд╕рд╛рдиреЛрдВ рдХреЛ рдЦреЗрддреА рдореЗрдВ рд╕рд╣рд╛рдпрддрд╛ рдкреНрд░рджрд╛рди рдХрд░рддрд╛ рд╣реИред': '{{ _("Smart Crop Care Assistant is an agricultural management platform that helps farmers with farming.") }}',
    'рд╣рдо рдореМрд╕рдо рдХреА рдЬрд╛рдирдХрд╛рд░реА, рдлрд╕рд▓ рдХреА рдирд┐рдЧрд░рд╛рдиреА, рдФрд░ рдХреГрд╖рд┐ рд╕рд▓рд╛рд╣ рдЬреИрд╕реА рд╕реЗрд╡рд╛рдПрдВ рджреЗрддреЗ рд╣реИрдВред': '{{ _("We provide services like weather information, crop monitoring, and agricultural advice.") }}',
    
    # Activity descriptions
    'рдХреАрдЯрдирд╛рд╢рдХ рдХрд╛ рдирд╛рдо рдФрд░ рдЫрд┐рдбрд╝рдХрд╛рд╡ рдХреА рд╡рд┐рдзрд┐ рдмрддрд╛рдПрдВ': '{{ _("Specify pesticide name and spraying method") }}',
    'рдХреЛрдИ рдлрд╕рд▓ рдЙрдкрд▓рдмреНрдз рдирд╣реАрдВ': '{{ _("No crops available") }}',
    'рдкрд╣рд▓рд╛ рдЦреЗрдд рдЬреЛрдбрд╝реЗрдВ': '{{ _("Add first farm") }}',
}

def fix_template_file(file_path):
    """Fix hardcoded text in a single template file"""
    try:
        with open(file_path, 'r', encoding='utf-8') as f:
            content = f.read()
        
        original_content = content
        changes_made = 0
        
        # Apply replacements
        for hindi_text, replacement in REPLACEMENTS.items():
            if hindi_text in content:
                content = content.replace(hindi_text, replacement)
                changes_made += 1
                print(f"  тЬУ Replaced: {hindi_text}")
        
        # Only write if changes were made
        if changes_made > 0:
            with open(file_path, 'w', encoding='utf-8') as f:
                f.write(content)
            print(f"  ЁЯУЭ Updated {file_path} with {changes_made} changes")
            return True
        else:
            print(f"  тПня╕П No changes needed in {file_path}")
            return False
            
    except Exception as e:
        print(f"  тЭМ Error processing {file_path}: {e}")
        return False

def main():
    """Main function to process all template files"""
    print("ЁЯФз Starting hardcoded text fix...")
    
    # Find all HTML template files
    template_dir = Path("app/templates")
    if not template_dir.exists():
        print("тЭМ Templates directory not found!")
        return
    
    html_files = list(template_dir.rglob("*.html"))
    print(f"ЁЯУБ Found {len(html_files)} HTML template files")
    
    total_fixed = 0
    
    for file_path in html_files:
        print(f"\nЁЯФН Processing: {file_path}")
        if fix_template_file(file_path):
            total_fixed += 1
    
    print(f"\nтЬЕ Completed! Fixed {total_fixed} out of {len(html_files)} files")
    print("\nЁЯУЛ Next steps:")
    print("1. Run: python compile_translations.py")
    print("2. Test the application in both languages")
    print("3. Verify all UI elements display correctly")

if __name__ == "__main__":
    main()
